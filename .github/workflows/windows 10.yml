name: Windows 10

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-2022
    timeout-minutes: 4320   # 72 hours

    steps:
      - name: Configure Core RDP Settings
        run: |
          # Enable Remote Desktop and disable Network Level Authentication
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                             -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                             -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                             -Name "SecurityLayer" -Value 0 -Force

          # Firewall rule for RDP
          netsh advfirewall firewall delete rule name="RDP-Tailscale"
          netsh advfirewall firewall add rule name="RDP-Tailscale" `
            dir=in action=allow protocol=TCP localport=3389

          Restart-Service -Name TermService -Force

      - name: Create Permanent RDP User
        run: |
          $username = "cyberpunk"
          $password = "Surya@12345RDP"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force

          if (Get-LocalUser -Name $username -ErrorAction SilentlyContinue) {
              Remove-LocalUser -Name $username
          }

          New-LocalUser -Name $username -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member $username
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username
          
          echo "RDP_CREDS=User: $username | Password: $password" >> $env:GITHUB_ENV

      - name: Install Tailscale (Latest)
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath -UseBasicParsing
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Establish Tailscale Connection
        run: |
          $authKey = "${{ secrets.TAILSCALE_PREAUTHKEY }}"
          $hostname = "gh-runner-$env:GITHUB_RUN_ID"

          # âœ… Only bring up basic tailscale, no subnet / exit node
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=$authKey --hostname=$hostname

          # Get Tailscale IP
          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 10) {
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              Start-Sleep -Seconds 5
              $retries++
          }
          if (-not $tsIP) {
              Write-Error "Tailscale IP not assigned. Exiting."
              exit 1
          }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: Run Custom Apps Installer (script By Surya....!!! )
        run: |
          Write-Host "Downloading and running Windows-apps-by-surya.ps1..."
          $scriptUrl = "https://raw.githubusercontent.com/surya123-s/TestVPN/refs/heads/main/Windows-apps-by-surya.ps1"
          $localPath = "$env:TEMP\Windows-apps-by-surya.ps1"
          Invoke-WebRequest -Uri $scriptUrl -OutFile $localPath -UseBasicParsing
          powershell -ExecutionPolicy Bypass -File $localPath

      - name: RDP Credentials 
        run: |
          Write-Host "=== RDP ACCESS ==="
          Write-Host "Address: $env:TAILSCALE_IP"
          Write-Host "Username: cyberpunk"
          Write-Host "Password: Surya@12345RDP"
          Write-Host "=================="
          Write-Host "=====  If you want CLI runner  ========"
          Write-Host "====  Then install xfreerdp first (else use Remmina) ======="
          Write-Host "Command =====> sudo pacman -S xfreerdp "
          Write-Host "=== Now You Can use Below Commands ==="
          Write-Host "=== If you have higher bandwidth network then use this ====="
          Write-Host "xfreerdp /v:$env:TAILSCALE_IP /u:cyberpunk /p:Surya@12345RDP /f +clipboard /sound"
          Write-Host "=================="
          Write-Host "For low network or best performance use this command :"
          Write-Host "xfreerdp /v:$env:TAILSCALE_IP /u:cyberpunk /p:Surya@12345RDP /f /fast-path /network:modem /bpp:16 /compression /gfx:rfx /codec-cache:per-session /sound:sys:alsa /wallpaper +clipboard"
          Write-Host "=================="
          Write-Host "=====  And For Arch+Hyperland Users  ======="
          Write-Host "=== For Lower Internet connection ===="
          $rdp_command = @"
          env GDK_BACKEND=x11 QT_QPA_PLATFORM=xcb \
          xfreerdp /v:$env:TAILSCALE_IP /u:cyberpunk /p:'Surya@12345RDP' /f \
          /gfx-h264 /rfx /network:auto /compression /jpeg \
          /sound:sys:alsa +clipboard /frame-ack:1
          "@

          Write-Host $rdp_command
          Write-Host "=================="

      - name: Maintain Connection (For 6 Hrs only)
        run: |
          while ($true) {
           Write-Host "[$(Get-Date)] RDP Active - Use Ctrl+C in workflow to terminate"
           Start-Sleep -Seconds 300
          }
