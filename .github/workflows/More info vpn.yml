name: Tailscale Live Node Notification

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"  # Every 6 hours

jobs:
  tailscale-node:
    runs-on: ubuntu-latest
    timeout-minutes: 4320   # 6 hours

    steps:
      - name: Install Tailscale
        run: |
          sudo apt-get update
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Enable IP Forwarding
        run: |
          sudo sysctl -w net.ipv4.ip_forward=1
          sudo sysctl -w net.ipv6.conf.all.forwarding=1

      - name: Get Runner Hostname
        id: runner_info
        run: |
          RUNNER_NAME=$(hostname)
          echo "runner_name=$RUNNER_NAME" >> $GITHUB_ENV
          echo "runner_name=$RUNNER_NAME" >> $GITHUB_OUTPUT

      - name: Start Tailscale Exit Node
        run: |
          sudo tailscale up \
            --authkey ${{ secrets.TAILSCALE_PREAUTHKEY }} \
            --ssh \
            --advertise-exit-node \
            --hostname ${{ steps.runner_info.outputs.runner_name }} \
            --reset
        env:
          TS_SOCKET: /tmp/tailscaled.sock

      - name: Live Update Telegram Notification
        run: |
          #!/bin/bash
          START_TIME=$(date +%s)
          END_TIME=$((START_TIME + 21600))  # 6 hours

          # Send initial message
          TAILSCALE_IP=$(sudo tailscale ip -4)
          PUBLIC_IP=$(curl -s ifconfig.me)
          LOCATION=$(curl -s https://ipapi.co/$PUBLIC_IP/city/,%20$PUBLIC_IP/country_name/)
          ISP=$(curl -s https://ipapi.co/$PUBLIC_IP/org/)
          CURRENT_HOUR=$(date -u +%H)
          NEXT_HOUR=$(( ( (CURRENT_HOUR/6 + 1)*6 ) % 24 ))
          NEXT_RUN=$(date -d "today $NEXT_HOUR:00 +5 hours 30 minutes" +"%I:%M %p IST")

          INIT_MSG="🚀 Tailscale Node Online
──────────────────────────────
🖥️  Runner       : ${{ steps.runner_info.outputs.runner_name }}
🌐  Tailscale IP  : $TAILSCALE_IP
🌍  Public IP    : $PUBLIC_IP
📍  Location     : $LOCATION
🏢  ISP          : $ISP
──────────────────────────────
⏱️  Running since: 00:00:00
⏰  Next workflow : $NEXT_RUN
──────────────────────────────"

          MSG_ID=$(curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TG_CHAT_ID }} \
            -d text="$INIT_MSG" | jq -r '.result.message_id')

          # Update every 5 minutes
          while [ $(date +%s) -lt $END_TIME ]; do
            NOW=$(date +%s)
            ELAPSED=$((NOW - START_TIME))
            RUNNING=$(printf '%02d:%02d:%02d' $((ELAPSED/3600)) $(((ELAPSED/60)%60)) $((ELAPSED%60)))
            TAILSCALE_IP=$(sudo tailscale ip -4)
            PUBLIC_IP=$(curl -s ifconfig.me)
            LOCATION=$(curl -s https://ipapi.co/$PUBLIC_IP/city/,%20$PUBLIC_IP/country_name/)
            ISP=$(curl -s https://ipapi.co/$PUBLIC_IP/org/)

            UPDATED_MSG="🚀 Tailscale Node Online
──────────────────────────────
🖥️  Runner       : ${{ steps.runner_info.outputs.runner_name }}
🌐  Tailscale IP  : $TAILSCALE_IP
🌍  Public IP    : $PUBLIC_IP
📍  Location     : $LOCATION
🏢  ISP          : $ISP
──────────────────────────────
⏱️  Running since: $RUNNING
⏰  Next workflow : $NEXT_RUN
──────────────────────────────"

            curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/editMessageText \
              -d chat_id=${{ secrets.TG_CHAT_ID }} \
              -d message_id=$MSG_ID \
              -d text="$UPDATED_MSG"

            sleep 300
          done
        env:
          TS_SOCKET: /tmp/tailscaled.sock

      - name: Cleanup Exit Node
        if: always()
        run: |
          sudo tailscale down

      - name: Send Telegram Stop Notification
        if: always()
        run: |
          TAILSCALE_IP=$(sudo tailscale ip -4)
          PUBLIC_IP=$(curl -s ifconfig.me)
          LOCATION=$(curl -s https://ipapi.co/$PUBLIC_IP/city/,%20$PUBLIC_IP/country_name/)
          ISP=$(curl -s https://ipapi.co/$PUBLIC_IP/org/)
          ELAPSED=$(( $(date +%s) - START_TIME ))
          RUNNING=$(printf '%02d:%02d:%02d' $((ELAPSED/3600)) $(((ELAPSED/60)%60)) $((ELAPSED%60)))

          MSG="🛑 Tailscale Node Stopped
──────────────────────────────
🖥️  Runner       : ${{ steps.runner_info.outputs.runner_name }}
🌐  Tailscale IP  : $TAILSCALE_IP
🌍  Public IP    : $PUBLIC_IP
📍  Location     : $LOCATION
🏢  ISP          : $ISP
──────────────────────────────
⏱️  Total running time: $RUNNING
──────────────────────────────"
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TG_CHAT_ID }} \
            -d text="$MSG"
