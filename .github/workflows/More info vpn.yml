name: Tailscale With Bot Notification

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"   # Runs every 6 hours

jobs:
  run-tailscale:
    runs-on: ubuntu-latest

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Enable IP Forwarding
        run: |
          sudo sysctl -w net.ipv4.ip_forward=1
          sudo sysctl -w net.ipv6.conf.all.forwarding=1

      - name: Start Tailscale Exit Node
        run: |
          sudo tailscale up \
            --authkey ${{ secrets.TAILSCALE_AUTHKEY }} \
            --ssh \
            --advertise-exit-node
        env:
          TS_SOCKET: /tmp/tailscaled.sock

      - name: Get Tailscale, Public IP & Location
        id: get_ips
        run: |
          START_TIME=$(date +%s)
          echo "START_TIME=$START_TIME" >> $GITHUB_ENV

          TAILSCALE_IP=$(sudo tailscale ip -4)
          PUBLIC_IP=$(curl -s ifconfig.me)

          LOCATION_JSON=$(curl -s ip-api.com/json/$PUBLIC_IP)
          CITY=$(echo $LOCATION_JSON | jq -r '.city')
          COUNTRY=$(echo $LOCATION_JSON | jq -r '.country')
          COUNTRY_CODE=$(echo $LOCATION_JSON | jq -r '.countryCode')
          ISP=$(echo $LOCATION_JSON | jq -r '.isp')

          # Convert country code -> flag emoji
          FLAG=""
          for ((i=0; i<${#COUNTRY_CODE}; i++)); do
            CHAR=${COUNTRY_CODE:$i:1}
            CODE=$((0x1F1E6 + $(printf "%d" "'$CHAR") - 65))
            FLAG="$FLAG$(printf '\\U%08X' $CODE)"
          done
          FLAG=$(echo -e "$FLAG")   # force proper emoji rendering

          RUNNER_NAME=$HOSTNAME

          echo "TAILSCALE_IP=$TAILSCALE_IP" >> $GITHUB_ENV
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
          echo "CITY=$CITY" >> $GITHUB_ENV
          echo "COUNTRY=$COUNTRY" >> $GITHUB_ENV
          echo "ISP=$ISP" >> $GITHUB_ENV
          echo "FLAG=$FLAG" >> $GITHUB_ENV
          echo "RUNNER_NAME=$RUNNER_NAME" >> $GITHUB_ENV

          echo "ts_ip=$TAILSCALE_IP" >> $GITHUB_OUTPUT
          echo "pub_ip=$PUBLIC_IP" >> $GITHUB_OUTPUT
          echo "city=$CITY" >> $GITHUB_OUTPUT
          echo "country=$COUNTRY" >> $GITHUB_OUTPUT
          echo "isp=$ISP" >> $GITHUB_OUTPUT
          echo "flag=$FLAG" >> $GITHUB_OUTPUT
          echo "runner=$RUNNER_NAME" >> $GITHUB_OUTPUT
        env:
          TS_SOCKET: /tmp/tailscaled.sock

      - name: Send Telegram Start Notification
        run: |
          MSG="🚀 Tailscale Node Online%0A🖥️ Runner: ${{ steps.get_ips.outputs.runner }}%0A🌐 Tailscale IP: ${{ steps.get_ips.outputs.ts_ip }}%0A🌍 Public IP: ${{ steps.get_ips.outputs.pub_ip }}%0A📍 Location: ${{ steps.get_ips.outputs.city }}, ${{ steps.get_ips.outputs.country }} ${{ steps.get_ips.outputs.flag }}%0A🏢 ISP: ${{ steps.get_ips.outputs.isp }}%0A⏱️ Active for 6 hours"
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TG_CHAT_ID }} \
          -d text="$MSG"

      - name: Keep Runner Alive
        run: |
          echo "Runner active for 6 hours. It will auto-restart again on schedule."
          sleep 21600 # 6 hours

      - name: Cleanup Exit Node
        if: always()
        run: |
          END_TIME=$(date +%s)
          START_TIME=${START_TIME:-$(date +%s)}
          DURATION=$((END_TIME - START_TIME))

          HOURS=$((DURATION / 3600))
          MINUTES=$(((DURATION % 3600) / 60))
          SECONDS=$((DURATION % 60))
          UPTIME=$(printf "%02d:%02d:%02d" $HOURS $MINUTES $SECONDS)

          echo "UPTIME=$UPTIME" >> $GITHUB_ENV
          sudo tailscale down

      - name: Send Telegram Stop Notification
        if: always()
        run: |
          MSG="🛑 Tailscale Node Stopped%0A🖥️ Runner: ${{ steps.get_ips.outputs.runner }}%0A🌐 Tailscale IP was: ${{ steps.get_ips.outputs.ts_ip }}%0A🌍 Public IP was: ${{ steps.get_ips.outputs.pub_ip }}%0A📍 Location was: ${{ steps.get_ips.outputs.city }}, ${{ steps.get_ips.outputs.country }} ${{ steps.get_ips.outputs.flag }}%0A🏢 ISP was: ${{ steps.get_ips.outputs.isp }}%0A🕒 Active Time: $UPTIME"
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TG_CHAT_ID }} \
          -d text="$MSG"
