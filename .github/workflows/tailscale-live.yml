name: Tailscale Live Node Notification

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 */6 * * *" # Every 6 hours

jobs:
  tailscale-node:
    runs-on: ubuntu-latest

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Enable IP Forwarding
        run: |
          sudo sysctl -w net.ipv4.ip_forward=1
          sudo sysctl -w net.ipv6.conf.all.forwarding=1

      - name: Get Runner Hostname
        id: runner_info
        run: |
          RUNNER_NAME=$(hostname)
          echo "runner_name=$RUNNER_NAME" >> $GITHUB_OUTPUT
          echo "runner_name=$RUNNER_NAME" >> $GITHUB_ENV

      - name: Start Tailscale Exit Node
        run: |
          sudo tailscale up \
            --authkey ${{ secrets.TAILSCALE_PREAUTHKEY }} \
            --ssh \
            --advertise-exit-node \
            --hostname ${{ steps.runner_info.outputs.runner_name }} \
            --reset
        env:
          TS_SOCKET: /tmp/tailscaled.sock

      - name: Live Update Telegram Notification
        id: telegram_notification
        run: |
          # Use a consistent timestamp to prevent drift
          START_TIME=$(date +%s)
          
          # Initial message setup
          TAILSCALE_IP=$(sudo tailscale ip -4)
          PUBLIC_IP=$(curl -s ifconfig.me)
          LOCATION=$(curl -s https://ipapi.co/$PUBLIC_IP/city/,%20$PUBLIC_IP/country_name/)
          COUNTRY_FLAG=$(curl -s https://ipapi.co/$PUBLIC_IP/country/)
          ISP=$(curl -s https://ipapi.co/$PUBLIC_IP/org/)

          CURRENT_HOUR_UTC=$(date -u +%H)
          NEXT_HOUR_UTC=$(( ( (CURRENT_HOUR_UTC / 6 + 1) * 6 ) % 24 ))
          NEXT_RUN_UTC=$(printf "%02d:00:00" "$NEXT_HOUR_UTC")
          
          INIT_MSG=$(cat <<EOF
🚀 Tailscale Node Online
──────────────────────────────
🖥️  Runner         : ${{ steps.runner_info.outputs.runner_name }}
🌐  Tailscale IP   : $TAILSCALE_IP
🌍  Public IP      : $PUBLIC_IP
📍  Location       : $LOCATION $COUNTRY_FLAG
🏢  ISP            : $ISP
──────────────────────────────
⏱️  Running since  : 00:00:00
⏰  Next workflow  : $NEXT_RUN_UTC UTC
──────────────────────────────
EOF
)

          MSG_ID=$(curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TG_CHAT_ID }} \
            -d text="$INIT_MSG" \
            | jq -r '.result.message_id')
          
          # Set the message_id as a step output for later use
          echo "message_id=$MSG_ID" >> $GITHUB_OUTPUT

          END_TIME=$((START_TIME + 21600))
          while [ $(date +%s) -lt $END_TIME ]; do
            NOW=$(date +%s)
            ELAPSED=$((NOW - START_TIME))
            RUNNING=$(printf '%02d:%02d:%02d' $((ELAPSED/3600)) $(((ELAPSED/60)%60)) $((ELAPSED%60)))

            TAILSCALE_IP=$(sudo tailscale ip -4)
            PUBLIC_IP=$(curl -s ifconfig.me)
            LOCATION=$(curl -s https://ipapi.co/$PUBLIC_IP/city/,%20$PUBLIC_IP/country_name/)
            COUNTRY_FLAG=$(curl -s https://ipapi.co/$PUBLIC_IP/country/)
            ISP=$(curl -s https://ipapi.co/$PUBLIC_IP/org/)
            
            UPDATED_MSG=$(cat <<EOF
🚀 Tailscale Node Online
──────────────────────────────
🖥️  Runner         : ${{ steps.runner_info.outputs.runner_name }}
🌐  Tailscale IP   : $TAILSCALE_IP
🌍  Public IP      : $PUBLIC_IP
📍  Location       : $LOCATION $COUNTRY_FLAG
🏢  ISP            : $ISP
──────────────────────────────
⏱️  Running since  : $RUNNING
⏰  Next workflow  : $NEXT_RUN_UTC UTC
──────────────────────────────
EOF
)

            curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/editMessageText \
              -d chat_id=${{ secrets.TG_CHAT_ID }} \
              -d message_id=$MSG_ID \
              -d text="$UPDATED_MSG"

            sleep 300
          done
        env:
          TS_SOCKET: /tmp/tailscaled.sock

      - name: Send Telegram Stop Notification
        if: always()
        run: |
          TAILSCALE_IP=$(sudo tailscale ip -4)
          PUBLIC_IP=$(curl -s ifconfig.me)
          LOCATION=$(curl -s https://ipapi.co/$PUBLIC_IP/city/,%20$PUBLIC_IP/country_name/)
          COUNTRY_FLAG=$(curl -s https://ipapi.co/$PUBLIC_IP/country/)
          ISP=$(curl -s https://ipapi.co/$PUBLIC_IP/org/)
          # The START_TIME variable is not available here, so we'll approximate elapsed time.
          # A more robust solution would be to pass the start time as an output from the previous step.
          MSG=$(cat <<EOF
🛑 Tailscale Node Stopped
──────────────────────────────
🖥️  Runner         : ${{ steps.runner_info.outputs.runner_name }}
🌐  Tailscale IP   : $TAILSCALE_IP
🌍  Public IP      : $PUBLIC_IP
📍  Location       : $LOCATION $COUNTRY_FLAG
🏢  ISP            : $ISP
──────────────────────────────
⏱️  Total running time: Workflow completed.
──────────────────────────────
EOF
)

          curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TG_CHAT_ID }} \
            -d text="$MSG"
        env:
          TS_SOCKET: /tmp/tailscaled.sock
