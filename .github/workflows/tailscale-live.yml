name: Tailscale Live Node

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"   # Every 6 hours

jobs:
  run-tailscale:
    runs-on: ubuntu-latest

    steps:
      - name: Install Tailscale
        run: |
          sudo apt-get update
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Enable IP Forwarding
        run: |
          sudo sysctl -w net.ipv4.ip_forward=1
          sudo sysctl -w net.ipv6.conf.all.forwarding=1

      - name: Get Runner Info
        id: runner_info
        run: |
          RUNNER_NAME=$(hostname)
          CURRENT_TIME=$(date +%s)
          echo "runner_name=$RUNNER_NAME" >> $GITHUB_ENV
          echo "current_epoch=$CURRENT_TIME" >> $GITHUB_ENV

      - name: Start Tailscale Exit Node
        run: |
          sudo tailscale up \
            --authkey ${{ secrets.TAILSCALE_PREAUTHKEY }} \
            --ssh \
            --advertise-exit-node \
            --hostname ${{ steps.runner_info.outputs.runner_name }} \
            --reset
        env:
          TS_SOCKET: /tmp/tailscaled.sock

      - name: Get Tailscale & Public IP
        id: get_ips
        run: |
          TAILSCALE_IP=$(sudo tailscale ip -4)
          PUBLIC_IP=$(curl -s ifconfig.me)
          LOCATION=$(curl -s "https://ipapi.co/$PUBLIC_IP/json/" | jq -r '"\(.city), \(.country_name) 🇺🇸"')
          ISP=$(curl -s "https://ipapi.co/$PUBLIC_IP/org/")
          echo "TAILSCALE_IP=$TAILSCALE_IP" >> $GITHUB_ENV
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
          echo "LOCATION=$LOCATION" >> $GITHUB_ENV
          echo "ISP=$ISP" >> $GITHUB_ENV
          echo "ts_ip=$TAILSCALE_IP" >> $GITHUB_OUTPUT
          echo "pub_ip=$PUBLIC_IP" >> $GITHUB_OUTPUT

      - name: Send Live Telegram Notification
        run: |
          NEXT_RUN_UTC=$(date -u -d "next hour 0 */6 * * *" +%s)
          NEXT_RUN_IST=$(date -d "@$((NEXT_RUN_UTC + 19800))" "+%I:%M %p IST")
          START_EPOCH=${{ env.current_epoch }}
          MSG="🚀 *Tailscale Node Online*\n🖥️ Runner: ${{ env.runner_name }}\n🌐 Tailscale IP: ${{ steps.get_ips.outputs.ts_ip }}\n🌍 Public IP: ${{ steps.get_ips.outputs.pub_ip }}\n📍 Location: ${{ env.LOCATION }}\n🏢 ISP: ${{ env.ISP }}\n⏱️ Running since : 00:00:00\n⏰ Next workflow run: $NEXT_RUN_IST"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TG_CHAT_ID }}" \
            -d parse_mode="Markdown" \
            -d text="$MSG"

      - name: Keep Runner Alive & Update Live Time
        run: |
          START_EPOCH=${{ env.current_epoch }}
          while true; do
            NOW=$(date +%s)
            DIFF=$((NOW-START_EPOCH))
            HH=$((DIFF/3600))
            MM=$(( (DIFF%3600)/60 ))
            SS=$((DIFF%60))
            TIME_ELAPSED=$(printf "%02d:%02d:%02d" $HH $MM $SS)
            NEXT_RUN_UTC=$(date -u -d "next hour 0 */6 * * *" +%s)
            NEXT_RUN_IST=$(date -d "@$((NEXT_RUN_UTC + 19800))" "+%I:%M %p IST")
            MSG="🚀 *Tailscale Node Online*\n🖥️ Runner: ${{ env.runner_name }}\n🌐 Tailscale IP: ${{ steps.get_ips.outputs.ts_ip }}\n🌍 Public IP: ${{ steps.get_ips.outputs.pub_ip }}\n📍 Location: ${{ env.LOCATION }}\n🏢 ISP: ${{ env.ISP }}\n⏱️ Running since : $TIME_ELAPSED\n⏰ Next workflow run: $NEXT_RUN_IST"
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/editMessageText" \
              -d chat_id="${{ secrets.TG_CHAT_ID }}" \
              -d message_id="${{ steps.get_ips.outputs.telegram_message_id }}" \
              -d parse_mode="Markdown" \
              -d text="$MSG"
            sleep 300
          done

      - name: Cleanup Exit Node
        if: always()
        run: |
          echo "🛑 Cleaning up Tailscale exit node..."
          sudo tailscale down

      - name: Send Telegram Stop Notification
        if: always()
        run: |
          END_TIME=$(date +%s)
          DURATION=$((END_TIME - ${{ env.current_epoch }}))
          HH=$((DURATION/3600))
          MM=$(((DURATION%3600)/60))
          SS=$((DURATION%60))
          TIME_ELAPSED=$(printf "%02d:%02d:%02d" $HH $MM $SS)
          MSG="🛑 *Tailscale Node Stopped*\n🖥️ Runner: ${{ env.runner_name }}\n🌐 Tailscale IP was: ${{ steps.get_ips.outputs.ts_ip }}\n🌍 Public IP was: ${{ steps.get_ips.outputs.pub_ip }}\n📍 Location was: ${{ env.LOCATION }}\n🏢 ISP was: ${{ env.ISP }}\n⏱️ Ran for: $TIME_ELAPSED"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TG_CHAT_ID }}" \
            -d parse_mode="Markdown" \
            -d text="$MSG"
